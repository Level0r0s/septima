    public class ${entityClass} extends ${entityBaseClass} {

        @Override
        public void ${entityKeyMutator}(${entityKeyType} aValue) {
            ${entityKeyType} old = ${entityKeyGetter}();
            if (${modelEntity}.getByKey().containsKey(old)){
                ${modelEntity}.getByKey().remove(old);
                super.${entityKeyMutator}(aValue);
                ${modelEntity}.getByKey().put(aValue, this);
            } else {
                super.${entityKeyMutator}(aValue);
            }
        }
${scalarProperties}${collectionProperties}
    }
${groupsDeclarations}
    private final Entity<${entityKeyBoxedType}, ${entityClass}> ${modelEntity} = new Entity<>(
            "${entityRef}",
            "${entityKey}",
            ${entityClass}::${entityKeyGetter},
            datum -> {
                ${entityClass} instance = new ${entityClass}();

${forwardMappings}
                return instance;
            },
            instance -> map(
${reverseMappings}
            ),
            instance -> {${groupsFulfills}
            },
            instance -> {${groupsEvicts}
            }
    );

